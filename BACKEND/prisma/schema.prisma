generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model administrador {
  idAdministrador Int      @id @unique(map: "idAdministrado_UNIQUE") @default(autoincrement())
  cpf             Int      @unique(map: "cpf_UNIQUE")
  nome            String   @db.VarChar(77)
  dataNasc        DateTime @db.Date
  senha           String   @db.VarChar(77)
  email           String   @unique(map: "email_UNIQUE") @db.VarChar(70)
}

model avaliacao {
  cliente_idCliente      Int        @unique(map: "cliente_idCliente_UNIQUE")
  avaliacao_idFreelancer Int        @unique(map: "avaliacao_idFreelancer_UNIQUE")
  dataAvaliacao          DateTime   @db.Date
  nota                   Int
  descricao              String     @db.VarChar(200)
  idAvaliacao            Int        @unique(map: "idAvaliacao_UNIQUE") @default(autoincrement())
  freelancer             freelancer @relation(fields: [avaliacao_idFreelancer], references: [idFreelancer], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_has_avaliacao_avaliacao1")
  cliente                cliente    @relation(fields: [cliente_idCliente], references: [idCliente], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_has_avaliacao_cliente1")

  @@id([idAvaliacao, cliente_idCliente, avaliacao_idFreelancer])
  @@index([avaliacao_idFreelancer], map: "fk_cliente_has_avaliacao_avaliacao1_idx")
  @@index([cliente_idCliente], map: "fk_cliente_has_avaliacao_cliente1_idx")
}

model categoria {
  idCategoria Int      @id @unique(map: "idCategoria_UNIQUE") @default(autoincrement())
  nome        String   @db.VarChar(77)
  servico     servico?
}

model cliente {
  idCliente Int        @id @unique(map: "idCliente_UNIQUE") @default(autoincrement())
  cpf       Int        @unique(map: "cpf_UNIQUE")
  nome      String     @db.VarChar(77)
  email     String     @unique(map: "email_UNIQUE") @db.VarChar(70)
  dataNasc  DateTime   @unique(map: "dataNasc_UNIQUE") @db.Date
  senha     String     @db.VarChar(70)
  avaliacao avaliacao?
}

model freelancer {
  idFreelancer Int        @id @unique(map: "idfreelancer_UNIQUE") @default(autoincrement())
  nome         String     @db.VarChar(77)
  cpf          Int        @unique(map: "cpf_UNIQUE")
  dataNasc     DateTime   @db.Date
  senha        String     @db.VarChar(70)
  email        String     @unique(map: "email_UNIQUE") @db.VarChar(70)
  avaliacao    avaliacao?
  servico      servico?
}

model servico {
  idServico               Int        @unique(map: "idServico_UNIQUE") @default(autoincrement())
  freelancer_idFreelancer Int        @unique(map: "freelancer_idFreelancer_UNIQUE")
  categoria_idCategoria   Int        @unique(map: "categoria_idCategoria_UNIQUE")
  decricao                String     @db.VarChar(200)
  categoria               categoria  @relation(fields: [categoria_idCategoria], references: [idCategoria], onDelete: NoAction, onUpdate: NoAction, map: "fk_freelancer_has_categoria_categoria1")
  freelancer              freelancer @relation(fields: [freelancer_idFreelancer], references: [idFreelancer], onDelete: NoAction, onUpdate: NoAction, map: "fk_freelancer_has_categoria_freelancer")

  @@id([idServico, freelancer_idFreelancer, categoria_idCategoria])
  @@index([categoria_idCategoria], map: "fk_freelancer_has_categoria_categoria1_idx")
  @@index([freelancer_idFreelancer], map: "fk_freelancer_has_categoria_freelancer_idx")
}
